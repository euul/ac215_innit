name: Continuous Integration and Continuous Deployment
run-name: ${{ github.actor }} submitted a CI CD Action
on:
  push:
    branches: [ "milestone4" ]

jobs:
  Explore-GitHub-Actions:
    if: contains(github.event.head_commit.message, '/deploy-app')
    runs-on: ubuntu-latest
    steps:
      - run: echo "Comment ${{ github.event.head_commit.message }}"
      - run: echo "Job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "Job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "Branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - id: 'auth'
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.DEPLOYMENT }}'
      - name: Configure Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
      - name: Configure Docker Client
        run: |-
          gcloud auth configure-docker # --quiet #authenticate to gcr
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the deployment dir
        run: |
          ls ${{ github.workspace }}/src/deployment/
      - name: Build Deployment Container 
        run: |-
          cd ${{ github.workspace }}/src/deployment/
          docker build -t innit-deployment -f Dockerfile .
          
      - name: Prepare Secrets
        run: |-
          echo '${{ secrets.DEPLOYMENT }}' > ${{ github.workspace }}/deployment.json
          echo '${{ secrets.DATA_SERVICE_ACCOUNT }}' > ${{ github.workspace }}/data-service-account.json

      - name: Run Deploy App
        run: |-
          set -e
          docker run --rm --name innit-deployment \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v $HOME/.ssh:/home/app/.ssh \
            -v ${{ github.workspace }}/src/frontend-shivas:/frontend-shivas \
            -v ${{ github.workspace }}/src/api-service-shivas:/api-service-shivas \
            --volume $GITHUB_WORKSPACE:/workspace \
            --mount type=bind,source=${{ github.workspace }}/deployment.json,target=/secrets/deployment.json,readonly \
            --mount type=bind,source=${{ github.workspace }}/data-service-account.json,target=/secrets/data-service-account.json,readonly \
            --env GOOGLE_APPLICATION_CREDENTIALS=/secrets/deployment.json \
            -e USE_GKE_GCLOUD_AUTH_PLUGIN=True \
            -e GCP_PROJECT=innit-437518 \
            -e GCP_ZONE=us-central1-a \
            innit-deployment sh deploy-k8s-update.sh
