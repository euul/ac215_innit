name: Integration Tests

on:
  push:
    branches:
      - milestone4  # Trigger on pushes to the milestone4 branch
  pull_request:
    branches:
      - milestone4  # Trigger on pull requests to milestone4

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository
    - name: Check out repository
      uses: actions/checkout@v4

    # Step 2: Set up Docker Compose
    - name: Set up Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    # Step 3: Build and Start Containers
    - name: Build and start containers
      run: |
        docker-compose -f src/docker-compose.yml up --build -d
      env:
        DATA_SERVICE_ACCOUNT: ${{ secrets.DATA_SERVICE_ACCOUNT }}
        TEXT_GENERATOR: ${{ secrets.TEXT_GENERATOR }}

    # Step 4: Wait for Container to Start
    # Give the container some time to start
    - name: Wait for container
      run: sleep 10

    # Step 5: Capture Logs (For Debugging)
    - name: Capture Docker container logs
      run: docker logs src_webscraping_1

    # Step 6: Run Tests
    - name: Run integration tests inside the container
      run: |
        docker exec src_webscraping_1 pipenv run pytest --cov=/app --cov-report=html --cov-report=term-missing /app/tests/integration_tests
      env:
        DATA_SERVICE_ACCOUNT: ${{ secrets.DATA_SERVICE_ACCOUNT }}
        TEXT_GENERATOR: ${{ secrets.TEXT_GENERATOR }}

    # Step 7: Upload Coverage Report
    - name: Upload coverage report
      if: always()  # Ensure this always runs, even if the tests fail
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: htmlcov  # Adjust path if the coverage report is located elsewhere

    # Step 8: Tear Down Containers
    - name: Tear down containers
      if: always()  # Ensure this always runs, even if the tests fail
      run: docker-compose -f src/docker-compose.yml down
