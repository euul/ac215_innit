name: Integration Tests

on:
  push:
    branches:
      - milestone4  # Trigger on pushes to the milestone4 branch
  pull_request:
    branches:
      - milestone4  # Trigger on pull requests to milestone4

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out repository
    - name: Check out repository
      uses: actions/checkout@v4

    # Step 2: Set up Docker Compose
    - name: Set up Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    # Step 3: Test Access to Secrets
    - name: Test Access to Secrets
      run: |
        echo "Testing secrets..."
        echo "$DATA_SERVICE_ACCOUNT" | jq '.' || echo "DATA_SERVICE_ACCOUNT is not valid JSON"
        echo "TEXT_GENERATOR: $TEXT_GENERATOR"
      env:
        DATA_SERVICE_ACCOUNT: ${{ secrets.DATA_SERVICE_ACCOUNT }}
        TEXT_GENERATOR: ${{ secrets.TEXT_GENERATOR }}

    # Step 4: Build and Start Containers
    - name: Build and start containers
      run: |
        docker-compose -f src/docker-compose.yml up -d
      env:
        DATA_SERVICE_ACCOUNT: ${{ secrets.DATA_SERVICE_ACCOUNT }}
        TEXT_GENERATOR: ${{ secrets.TEXT_GENERATOR }}

    # Step 5: List Running Containers
    - name: List running Docker containers
      run: docker ps  # This will show the container names, useful for debugging

    # Step 6: Run Integration Tests
    - name: Run integration tests inside the container
      run: |
        docker exec src_webscraping_1 pipenv run pytest /app/tests/integration_tests
      env:
        DATA_SERVICE_ACCOUNT: ${{ secrets.DATA_SERVICE_ACCOUNT }}
        TEXT_GENERATOR: ${{ secrets.TEXT_GENERATOR }}

    # # Step 7: Generate Coverage Report
    # - name: Generate coverage report inside the container
    #   run: |
    #     docker exec src_webscraping_1 pipenv run coverage run -m pytest /app/tests/integration_tests
    #     docker exec src_webscraping_1 pipenv run coverage html
    #     docker cp src_webscraping_1:/app/htmlcov ./htmlcov
    #   env:
    #     DATA_SERVICE_ACCOUNT: ${{ secrets.DATA_SERVICE_ACCOUNT }}
    #     TEXT_GENERATOR: ${{ secrets.TEXT_GENERATOR }}

    # Step 8: Get Container Logs
    - name: Get container logs
      run: docker logs src_webscraping_1

    # # Step 9: Upload Coverage Report  
    # - name: Upload coverage report
    #   if: always()  # Ensure this always runs, even if the tests fail
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: coverage-report
    #     path: ./htmlcov  # Adjust path if htmlcov is created elsewhere

    # Step 10: Tear Down Containers
    - name: Tear down containers
      if: always()  # Ensure this always runs, even if the tests fail
      run: docker-compose -f src/docker-compose.yml down
