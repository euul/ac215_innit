name: Integration Tests

on:
  push:
    branches:
      - milestone4
  pull_request:
    branches:
      - milestone4

jobs:
  integration_tests:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out repository
      - name: Check out repository
        uses: actions/checkout@v4

      # Step 2: Set up Docker Compose
      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # Step 3: Prepare coverage directory
      - name: Prepare coverage directory
        run: mkdir -p ./coverage_combined

      # Step 4: Test Webscraping Service
      - name: Test webscraping service
        run: |
          docker-compose -f src/docker-compose.yml up -d webscraping
          docker exec src_webscraping_1 pipenv run pytest /app/tests/integration_tests/test_webscraping.py
          docker exec src_webscraping_1 pipenv run coverage run --rcfile=/app/.coveragerc -m pytest /app/tests/integration_tests/test_webscraping.py
          docker-compose -f src/docker-compose.yml down
        env:
          DATA_SERVICE_ACCOUNT: ${{ secrets.DATA_SERVICE_ACCOUNT }}
          TEXT_GENERATOR: ${{ secrets.TEXT_GENERATOR }}

      # Step 5: Test question_bank Service
      - name: Test question_bank service
        run: |
          docker-compose -f src/docker-compose.yml up -d question_bank
          docker exec src_question_bank_1 pipenv run pytest /app/tests/integration_tests/test_question_bank.py
          docker exec src_question_bank_1 pipenv run coverage run --rcfile=/app/.coveragerc -m pytest /app/tests/integration_tests/test_question_bank.py
          docker-compose -f src/docker-compose.yml down
        env:
          DATA_SERVICE_ACCOUNT: ${{ secrets.DATA_SERVICE_ACCOUNT }}
          TEXT_GENERATOR: ${{ secrets.TEXT_GENERATOR }}

      # Step 6: Generate Unified Coverage Report
      - name: Generate unified coverage report
        run: |
          pip install coverage
          coverage combine /app/coverage_combined/.coverage*
          coverage html --rcfile=/app/.coveragerc
        env:
          DATA_SERVICE_ACCOUNT: ${{ secrets.DATA_SERVICE_ACCOUNT }}
          TEXT_GENERATOR: ${{ secrets.TEXT_GENERATOR }}

      # Step 7: Upload Coverage Report
      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: unified-coverage-report
          path: ./app/htmlcov

