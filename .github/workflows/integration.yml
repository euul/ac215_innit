name: Integration Tests

on:
  push:
    branches:
      - milestone4
  pull_request:
    branches:
      - milestone4

jobs:
  # Webscraping Tests
  webscraping:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build and start webscraping container
        run: |
          docker-compose -f src/docker-compose.yml up -d webscraping

      - name: Run integration tests inside webscraping container
        run: |
          docker exec src_webscraping_1 pipenv run pytest /app/tests/integration_tests/test_webscraping.py

      - name: Generate coverage report for webscraping
        run: |
          docker exec src_webscraping_1 pipenv run coverage run --rcfile=/app/.coveragerc -m pytest /app/tests/integration_tests/test_webscraping.py
          docker exec src_webscraping_1 pipenv run coverage html --rcfile=/app/.coveragerc
          docker cp src_webscraping_1:/app/htmlcov ./htmlcov_webscraping

      - name: Upload webscraping coverage report
        uses: actions/upload-artifact@v3
        with:
          name: webscraping-coverage-report
          path: ./htmlcov_webscraping

      - name: Tear down webscraping container
        run: docker-compose -f src/docker-compose.yml down webscraping

  # Question Bank Tests
  question_bank:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build and start question_bank container
        run: |
          docker-compose -f src/docker-compose.yml up -d question_bank

      - name: Run integration tests inside question_bank container
        run: |
          docker exec src_question_bank_1 pipenv run pytest /app/tests/integration_tests/test_question_bank.py

      - name: Generate coverage report for question_bank
        run: |
          docker exec src_question_bank_1 pipenv run coverage run --rcfile=/app/.coveragerc -m pytest /app/tests/integration_tests/test_question_bank.py
          docker exec src_question_bank_1 pipenv run coverage html --rcfile=/app/.coveragerc
          docker cp src_question_bank_1:/app/htmlcov ./htmlcov_question_bank

      - name: Upload question_bank coverage report
        uses: actions/upload-artifact@v3
        with:
          name: question-bank-coverage-report
          path: ./htmlcov_question_bank

      - name: Tear down question_bank container
        run: docker-compose -f src/docker-compose.yml down question_bank

  # YouTube Transcribe Tests
  youtube_transcribe:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build and start youtube_transcribe container
        run: |
          docker-compose -f src/docker-compose.yml up -d youtube_transcribe

      - name: Run integration tests inside youtube_transcribe container
        run: |
          docker exec src_youtube_transcribe_1 pipenv run pytest /app/tests/integration_tests/test_youtube_transcribe.py

      - name: Generate coverage report for youtube_transcribe
        run: |
          docker exec src_youtube_transcribe_1 pipenv run coverage run --rcfile=/app/.coveragerc -m pytest /app/tests/integration_tests/test_youtube_transcribe.py
          docker exec src_youtube_transcribe_1 pipenv run coverage html --rcfile=/app/.coveragerc
          docker cp src_youtube_transcribe_1:/app/htmlcov ./htmlcov_youtube_transcribe

      - name: Upload youtube_transcribe coverage report
        uses: actions/upload-artifact@v3
        with:
          name: youtube-transcribe-coverage-report
          path: ./htmlcov_youtube_transcribe

      - name: Tear down youtube_transcribe container
        run: docker-compose -f src/docker-compose.yml down youtube_transcribe

  # Datapipeline Tests
  datapipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build and start datapipeline container
        run: |
          docker-compose -f src/docker-compose.yml up -d datapipeline

      - name: Run integration tests inside datapipeline container
        run: |
          docker exec src_datapipeline_1 pipenv run pytest /app/tests/integration_tests/test_datapipeline.py

      - name: Generate coverage report for datapipeline
        run: |
          docker exec src_datapipeline_1 pipenv run coverage run --rcfile=/app/.coveragerc -m pytest /app/tests/integration_tests/test_datapipeline.py
          docker exec src_datapipeline_1 pipenv run coverage html --rcfile=/app/.coveragerc
          docker cp src_datapipeline_1:/app/htmlcov ./htmlcov_datapipeline

      - name: Upload datapipeline coverage report
        uses: actions/upload-artifact@v3
        with:
          name: datapipeline-coverage-report
          path: ./htmlcov_datapipeline

      - name: Tear down datapipeline container
        run: docker-compose -f src/docker-compose.yml down datapipeline
