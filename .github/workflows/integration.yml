name: Integration Tests

on:
  push:
    branches:
      - milestone4  # Trigger on pushes to the milestone4 branch
  pull_request:
    branches:
      - milestone4  # Trigger on pull requests to milestone4

jobs:
  setup-containers:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out repository
      - name: Check out repository
        uses: actions/checkout@v4
      
      # Step 2: Set up Docker Compose
      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # Step 3: Build and Start Containers
      - name: Build and start containers
        run: |
          docker-compose -f src/docker-compose.yml up -d
        env:
          DATA_SERVICE_ACCOUNT: ${{ secrets.DATA_SERVICE_ACCOUNT }}
          TEXT_GENERATOR: ${{ secrets.TEXT_GENERATOR }}

      # Step 4: List Running Containers
      - name: List running Docker containers
        run: docker ps

  test-webscraping:
    needs: setup-containers
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out repository
      - name: Check out repository
        uses: actions/checkout@v4

      # Step 2: Run Integration Tests
      - name: Run integration tests for webscraping
        run: |
          docker exec src_webscraping_1 pipenv run pytest /app/tests/integration_tests/test_webscraping.py
        env:
          DATA_SERVICE_ACCOUNT: ${{ secrets.DATA_SERVICE_ACCOUNT }}
          TEXT_GENERATOR: ${{ secrets.TEXT_GENERATOR }}

      # Step 3: Generate Coverage Report
      - name: Generate coverage report
        run: |
          docker exec src_webscraping_1 pipenv run coverage run --rcfile=/app/.coveragerc -m pytest /app/tests/integration_tests/test_webscraping.py
          docker exec src_webscraping_1 pipenv run coverage html --rcfile=/app/.coveragerc
          docker cp src_webscraping_1:/app/htmlcov ./htmlcov_webscraping

      # Step 4: Upload Coverage Report
      - name: Upload webscraping coverage report
        uses: actions/upload-artifact@v3
        with:
          name: webscraping-coverage-report
          path: ./htmlcov_webscraping

  test-question-bank:
    needs: setup-containers
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out repository
      - name: Check out repository
        uses: actions/checkout@v4

      # Step 2: Run Integration Tests
      - name: Run integration tests for question_bank
        run: |
          docker exec src_question_bank_1 pipenv run pytest /app/tests/integration_tests/test_question_bank.py
        env:
          DATA_SERVICE_ACCOUNT: ${{ secrets.DATA_SERVICE_ACCOUNT }}
          TEXT_GENERATOR: ${{ secrets.TEXT_GENERATOR }}

      # Step 3: Generate Coverage Report
      - name: Generate coverage report
        run: |
          docker exec src_question_bank_1 pipenv run coverage run --rcfile=/app/.coveragerc -m pytest /app/tests/integration_tests/test_question_bank.py
          docker exec src_question_bank_1 pipenv run coverage html --rcfile=/app/.coveragerc
          docker cp src_question_bank_1:/app/htmlcov ./htmlcov_question_bank

      # Step 4: Upload Coverage Report
      - name: Upload question_bank coverage report
        uses: actions/upload-artifact@v3
        with:
          name: question-bank-coverage-report
          path: ./htmlcov_question_bank

  tear-down:
    needs: [test-webscraping, test-question-bank]
    runs-on: ubuntu-latest
    steps:
      - name: Tear down containers
        run: docker-compose -f src/docker-compose.yml down
